package com.gzw.mp.adapter;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.gzw.mp.R;
import com.gzw.mp.bean.TimeLineBean;
import com.gzw.mp.utils.ImageLoadUtil;
import com.gzw.mp.utils.LogUtil;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;

import java.util.List;

/**
 * @author zhangjie
 *         2015/11/10
 *         zhangxiaomu.grr@gmail.com
 */
public class VideoShowBaseAdapter extends BaseAdapter {

    private List<TimeLineBean> timeLineData;
    private Context context;

    public VideoShowBaseAdapter(Context context, List<TimeLineBean> timeLineData) {
        this.context = context;
        this.timeLineData = timeLineData;
    }

    @Override
    public int getCount() {
        return timeLineData.size();
    }

    @Override
    public Object getItem(int position) {
        return timeLineData.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;
        if (convertView == null) {
            convertView = View.inflate(context, R.layout.video_single_show_layout, null);
            holder = new ViewHolder(convertView);
            convertView.setTag(holder);
        } else {
            holder = ((ViewHolder) convertView.getTag());
        }
        //视频信息
        final TimeLineBean data = timeLineData.get(position);

        //安全起见 先判断一下 Media对象是否为空 如果为空就炸了
        if (data.getMedia() != null) {
            //用户头像
            String avatarUrl = data.getMedia().getUser().getAvatar();
            LogUtil.i("---头像url", avatarUrl);
            ImageLoadUtil.loadImage(avatarUrl, holder.avatar);
            //点赞数
            int lickNum = data.getMedia().getLikes_count();
            String lickNumStr = Integer.toString(lickNum);
            LogUtil.i("---点赞数", lickNumStr);
            holder.likeCount.setText(lickNumStr);
        }
        //视频封面 缩略图
        String corverUrl = data.getRecommend_cover_pic();
        String captionText = data.getRecommend_caption().toString();
        ImageLoadUtil.loadImage(corverUrl, holder.corver);
        //视频描述
        holder.caption.setText(captionText);

        return convertView;
    }

    /**
     * 用注解方式写ViewHolder
     */
    static class ViewHolder {

        //视频封面
        @ViewInject(R.id.recommend_cover_pic)
        ImageView corver;
        //用户头像
        @ViewInject(R.id.avatar)
        ImageView avatar;
        //标题
        @ViewInject(R.id.recommend_caption)
        TextView caption;
        //点赞数
        @ViewInject(R.id.likes_count)
        TextView likeCount;

        public ViewHolder(View v) {
            ViewUtils.inject(this, v);
        }
    }
}
